ANOTAÇÕES CURSO DE JAVASCRIPT 

=============================================

AULA 1: https://www.youtube.com/watch?v=Ptbk2af68e8

- Java Script é usado pricipalmente para o contato com o cliente.

- Servidor é onde fica os arquivos armazenados para serem disponibilizados para o cliente por algum navegador.

- Website 
   	Conteúdo (HTML)
	Estilo (CSS)
	Interação (JavaScript)

- Não se diz que programamos em html ou css, mas sim em uma linguagem de programação, no caso JavaScript.

- Os sites mais importantes fazem uso do JavaScript


=============================================

AULA 2: https://www.youtube.com/watch?v=rUTKomc2gG8

- 1970 começou as primicias da internet.
- DARPA - centro de pesquisa tecnológica, com objetivos de guerra.
- ARPANET - rede para controle de dados, foi se atualizando até chegar na Internet.
- 1993 - surgiu a linguagem html, www, navegador.
- 1995 - surgiu o JavaScript, Brendan Eich, pela empresa Nestscape,  o nome Java estava muito famoso na época e foi usado para fim de marketing, mas são duas linguagens completamente diferentes. 
- 1997 - resolveram padronizar as linguagens, surgindo o ecmaScript, que é o JavaScript padronizado.
- 2008 -  surgiu o navegador da google, ganhando muito mercado.
- JavaScript foi feito para rodar dentro do navegador, mas como a google criou um interpretador com código aberto, um grupo pegou e criou uma aplicação para rodar o javascript fora do navegador, chamado NodeGS.
- O curso se baseia no ecmascript 6, mesmo não sendo a ultima versão.

- jQuery - conjunto de bibliotecas. 
- Angular - criado e mantido pelo google. Aplicações web.
- React - é do facebook.
- Vue - versão do angular melhorada 
- Electron -  interface gráfica - muito ultilizado, vscode, discord, 
- Ionic - sdk, aplicações para dispositivos móveis.
- codova
- Todas essas tecnologias, é necessário aprender JavaScript primeiro, e elas são muito importantes para o programador.

=============================================

AULA 3: https://www.youtube.com/watch?v=FdePtO5JSd0

- Pensar em Projetos pessoais e tentar resolver eles.
- Bibliografia Recomendada:
	JavaScript: o guia definitivo - David Flanagan (150,00)
	JavaScript: guia do programador - Maurício sam e silva
	Guia de referência (gratuito)
		Mozila - developer mozila > referências e guias > 		Tecnologias > Java Script
		Ecma - ecma international.org >Standarts > 262 > 			Here > 6 edição e 5 edição > tudo em inglês.

- Software: 
	- Chrome
	- Vscode 
	- NodeJS

=============================================

AULA 4: https://www.youtube.com/watch?v=OmmJBfcMJA8

-  dentro da tag <script> é onde é programado o JavaScript. Essa tag vai dentro do <body>

- window.alert ('') - exibe mensagem de alertas na página e depois de clicar em ok exibe o conteúdo.

- window.confirm ("") - exibe uma mensagem com as opções ok e cancelar.

- window.prompt ("") -  exibe a mensagem com uma caixa de texto para ser digitado.

- esses comandos precisam de variantes para serem interpretados. 

============================================

AULA 5: https://www.youtube.com/watch?v=Vbabsye7mWo

- Tipos de dados e variáveis.

- Aprender onde guardar os dados que são inseridos no site. 

- comenstários em JS 
	// - comentário em uma única linha (js)
	/*  */ - comentários de mais de uma linha (js/css)
	<----> - comentário de mais de uma linha (html)

- comentários são importantes para saber o que o programa está fazendo, necessário também para que a manutenção dos sites seja mais fácil.

- o sinal de igual significa recebe (=)

- null - retira o que está na variável.no js pode ser usados 3 tipos de 

- dentro da memória do computador, colocar espaços para receber os dados. Esses espaços são variáveis (var).

- no js moderno além de usar a palavra var, também é usado let.

- existem variáveis de tamanhos diferentes para caber dados de tamanhos diferentes.

-  no js pode ser usado 3 tipos de aspas:
	"  " - aspas duplas
	'  ' - aspas simples
	` ` - crase
	cada uma delas faz diferença para o interpretador (veremos 	mais pra frente)

- os nomes das variáveis é chamado de identificador
	Regras:
	- Podem começar com uma letra, $ ou _
	- Não podem começar com números
	- É possível usar letras ou numeros
	- É possível usar acentos e símbolos
	- Não podem conter espaços
	- Não podem ser palavras reservadas (que o js usa como 	comando)

- Dicas para escolher nome de identificadores: 
	- Maiúculas e minúsculas fazem diferença
	- tente escolher nomes coerentes para variáveis
	- evite se tornar um "programador alfabeto" ou um 	programador "contador"

- Tipos de dados (primitivos):
	- number
		Infinity
		NaN
	- string
	- boolean 
	- null
	- undefined
	- object 
		Array (vetor)
	- function 

- Typeof mostra o tipo da variável: 
	[] - objeto
	{} - objeto

=============================================

AULA 6: https://www.youtube.com/watch?v=OJgu_KCCUSY

- manipulação de dados

// number + number para adição
// string + string para concatenação

- window prompt retorna o dado inserido como uma string
- é necessário fazer a conversão de string para número

- é muito comum nas linguagens de programação fazer esse tipo de conversão.

- existe várias maneiras de fazer essa conversão
	- Number.parseInt(n) - para números inteiros
	- Number.parseFloat(n) - para numeros reais (com vígula)
	- Number - o interpretador decide se é real ou inteiro

--------------------------------------------

- conversão de number para string
	- String(n)
	- n.toString()

- Formatação de novas strings

var s = 'JavaScript

'Eu estou aprendendo s'     // não faz interpolação
'Eu estou aprendendo ' + s     // usa concatenação
`Eu estou aprendendo ${s}`     // usa template string

- s.length    // quantos caracteres a string tem
- s.toUpperCase()    // tudo para letras 'MAIÚSCULAS'
- s.toLowerCase()    // tudo para letras 'minúsculas'

var nome = window.prompt('Qual é o seu nome?')
        document.write(`Seu nome tem ${nome.length} letras` )

----------------------------------------

- Formatação de números:

- n.toFixed(2) - determina quantas casas decimais
- n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) - converte para real brasileiro, deixa na estrutura

=============================================

AULA 7: https://www.youtube.com/watch?v=hZG9ODUdxHo&t=39s

- Operadores do JavaScript
	- aritméticos
	- atribuição
	- relacionais 
	- lógicos
	- ternários

- Operadores aritméticos: 
	5 + 2 = 7 (soma)
	5 - 2 = 3 (subtração)
	5 * 2 = 10 (multiplicação)
	5 / 2 = 2.5 (divisão)
	5 % 2 = 1 (resto da divisão inteira, não é porcentagem)
	5 ** 2 = 25 (potenciação)

- Precedência de operadores (ordem): 
	()
	**
	* / %
	+ -


- Auto-atribuição:
	n = 3
	n = n + 4 
	pode ser substituído por: 
		n += 4
		-=
		*=
		/=
		**=
		%=
	essa é uma forma simplificada


- Incremento
	++ adiciona mais 1
	_ _ subtrai menos 1

=============================================

AULA 8: https://www.youtube.com/watch?v=BP63NhITvao&t=11s

- Operadores relacionais:
	5 >2 = true
	7 < 4 = false
	8 >= 8 = true
	9 <= 7 = false
	5 == 5 = true (igualdade)
	4 != 4 = false (diferente)

- Para toda expressão que tenha um valor relacioal ligado a ela, o resultado sempre será um valor boleano (verdadeiro ou falso)

- em uma expressão primeiro se faz os valores aritméticos e depois os relacionais. 

- pro JS o sinal de igualdade (==) não leva em conta se é uma string ou um número ele só relaciona as grandezas.

- Identidade:
	5 === '5' - false
	5 === 5 - true 
	 aqui leva em consideração o tipo

- Operadores lógicos: 
	! - negação (não)
	&& - conjunção (e)
	|| - disjunções (ou)

- Negação 
	! true = false
	! false = true

- Conjunção (tem um valor binário, dois de cada lado)
*tabela verdade
	true && true = true
	true && false = false
	false && true = false
	false && false  = false

- Disjunção 
	true || true = true
	true || false = true
	false || true = true
	false || false = false

- em uma expressão a ordem de resolução é os valores aritméticos, relacionais e depois os lógicos

- Operador Ternário
	?
	: 

	teste ? true : false

- junta 3 operandos, parecido com o if e else de python (teste lógico)

=============================================

AULA 9: https://www.youtube.com/watch?v=WWZX8RWLxIk

- DOM - Document Object Model - para criar aplicações visuais para o site.

- Conjunto de objetos dentro do navegador que dá acesso aos componentes internos do seu website

- Só funciona dentro do navegador, não roda no Node

- tudo dentro do JV está dentro de um window (janela).

*ARVORE DOM*

- window (raíz)
*conceito de pai/ filho e irmão
	- location (localização)
	- document (documento atual)
		- html
			- head
				- meta
				- title
				- etc
			- body
				- h1
				- p
				- p
					- strong
				- div
	- history (grava de onde você veio e para onde vc vai)

- você consegue navegar nas configurações pelo JS, pode selecionar os elementos para navegar dentro da arvore DOM.

- Selecionando 
	- por Marca
		está dentro de document
		getElementsByTagName()
		consegue selecionar mais de 1 objeto
	- por ID
		getElementById()
	- por Nome
		getElementsByName()
	- por Classe
		getElementsByClassName()
	- por Seletor (css)
		querySelector()
		querySelectorAll()
		é um método mais recente, é bom para edições 		rápidas

- InerText - usa o texto sem formatação
- InerHtml - vem com a formatação junto

- ID (#)
- Class (.)

=============================================

AULA 10: https://www.youtube.com/watch?v=wWnBB-mZIvY

- Eventos DOM

- Evento é tudo aquilo que pode acontecer com essa div (ou elemento)
	- eventos de mouse

- Events reference (MDM) - site que tem todos os eventos.

- Funções ficam em blocos e são rodadas somente se o evento ocorrer

	function nome da função() {
		
	}

- os eventos podem ser configurados em html ou js

- document.getetc - faz a ligação com o elemento do html

- addEventListener - é a ligação do html com o js (dentro de js)

- para verificar se tem alguma função com erro 
	- inspecionar 
	- x vermelho no canto superior direito

=============================================

AULA 11: https://youtu.be/cOdG4eACN2A

- Condições em JS

- Desvio condicional: 
	if (condição) {
	      true
	} else {
	      false
	}

- Tipos de condição:
	- Condição Simples
	- Condição Composta

- F8 executa o plugin para rodar o atalho do JS (nodeExec)

- console (escreve na tela do terminal)

=============================================

AULA 12: https://www.youtube.com/watch?v=EEStcIe8rAM

- Condições aninhadas
	- pega uma condição composta e coloca outras condições 	dentro delas
	- não tem uma regra de aninhamento
	- elseif
	
	if (cond1) {
	      bloco 1
	} else {
		if (cond2) {
		      bloco 2 
		} else {
		      bloco 3
		}
	}


- Condição Multipla 
	- importante no mundo da programação
	- trabalhar valores fixos
	- não representa só sim e não, mas sim vários valores
	- não é aplicável para todo tipo de situação
	- para cada bloco, é obrigatório o comando break!
	
	switch (expressão){
		case valor 1{
			break
		}

		case valor 2 {
			break
		}

		case valor 3 {
			break
		}

		default: (como se fosse o else) {
			break 
		}   
	}

- o break devia o comando para continuar o código
- switch só funciona com números inteiros e caracteres

=============================================

AULA EXERCÍCIO PARTE 1: https://www.youtube.com/watch?v=b2K7eo5Jdj8&t=191s

- Hora de Praticar

=============================================

AULA DE EXERCÍCIO PARTE 2: https://www.youtube.com/watch?v=UXSWgnbSHxs

=============================================

AULA DE EXERCÍCIO PARTE 3: https://www.youtube.com/watch?v=f5es-PpaUI8

=============================================

AULA 13: https://www.youtube.com/watch?v=5rZqYPKIwkY

- Repetições em js

- Função comerPizza()

function comerPizza() {
	comerFatia
	comerFatia
	comerFatia
	comerFatia
	comerFatia
	comerFatia
	comerFatia
	comerFatia
}

- Estruturas de controles
	- Sequências: vai executando as tarefas em sequencias. 
	- Condições: teste lógico onde há a verdade e falsidade.
	- Repetições/Laços: há duas possibilidades, verdadeiro e falso

- Repetições

- Montanha russa, vai executando o laço enquanto a condição for verdadeira, quando atingir o falso, o fluxo segue para o fim.

teste lógico no início:
while (condição) {

}


teste lógico no final:
do {

	while(){
	}
}

=============================================

AULA 14: https://www.youtube.com/watch?v=eX-lkN_Zahc


- Estrutura de repetição com variável de controle:

- Inicialização
- Teste Lógico
- Incremento
	- executa o bloco e volta ao início

for (início; teste; incremento) {


}


- Modo de depuração

mostra passo a passo o codigo sento executado

=============================================

EXERCÍCIOS PARTE 4: https://www.youtube.com/watch?v=6tyHypeY4-8

=============================================

MÓDULO F: https://www.youtube.com/watch?v=5m4UhZd-Les

- Variáveis compostas

- Uso de funções e eventos

- Passagem de parâmetros

- Exercícios propostos

- Próximos Passos

- Tem muito mais coisas avançadas para se aprender em JS, esse curso é apenas básico.

=============================================

AULA 15: https://www.youtube.com/watch?v=XdkW62tkAgU

- Variáveis Compostas

- Variáveis simples só conseguem armazenar um valor por vez.

- Variável composta deve ser capaz de armazenar vários valores em uma mesma estrutura.

- Exemplos de vagas de carros 

- Variável composta/ Array/ vetor = nome da variável
	- elemento = é um par que agruma o espaço da memória e 	os elementos abaixo
		- índice/ chave
			- conteúdo/ valor 
- um Array é uma variável que tem vários elementos e cada elemento é composto por um valor e por uma chave de itentificação 

var num = [  ,  ,  ]

- acrescentar valor em um array
	- num[numero da chave] ---acrescenta na posição 	específica
	- num.push(valor) --- acrescenta na próxima posição vazia

- num.length - ve quantos elementos tem no array

- num.sort() - coloca os elementos em ordem crescente  ddd

=============================================

AULA 16: https://www.youtube.com/watch?v=mc3TKp2XzhI&t=588s


- toda função precisa ter:
	- chamada
	- parâmetro (entrada)
	- ação
	- retorno

- nem toda função usa parâmetros ou tem retorno

- funções são ações executadas assim que são chamadas ou em decorrência de algum evento

- uma função pode receber parametros e retornar um resultado

- nos parênteses da expressão função é onde se coloca os parâmetros

- function ação(parâmetro) {
	return res

}

ação(5) = chamada

- uma função em js só pode ter 1 retorno


- continuar cursos avançados de js











